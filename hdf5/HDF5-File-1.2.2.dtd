<!--  

      DTD for NCSA Hierarchical Data Format, Version 5.1.2

      The HDF Software Copyright notice:
          Copyright Notice and Statement for NCSA Hierarchical Data Format (HDF)   Software Library and Utilities

          NCSA HDF5 (Hierarchical Data Format 5) Software Library and Utilities 
          Copyright 1998, 1999, 2000 by the Board of Trustees of the University of Illinois. All rights reserved.

          Contributors: National Center for Supercomputing Applications (NCSA) at the
          University of Illinois at Urbana-Champaign (UIUC), Lawrence Livermore 
          National Laboratory (LLNL), Sandia National Laboratories (SNL), Los Alamos 
          National Laboratory (LANL), Jean-loup Gailly and Mark Adler (gzip library).

          Redistribution and use in source and binary forms, with or without
          modification, are permitted for any purpose (including commercial purposes)


      For information about NCSA Hierarchical Data Format, see:
          http://hdf.ncsa.uiuc.edu
      or email to:
          hdfhelp@ncsa.uiuc.edu
 
      This DTD follows the HDF5 Data Model, which is described:
          http://hdf.ncsa.uiuc.edu/HDF5/ADM_990506/ 

-->
<!ELEMENT HDF5-File (UserBlock?,SuperBlock?,RootGroup)>
<!ELEMENT UserBlock (#PCDATA)>
<!ELEMENT SuperBlock EMPTY>
<!ATTLIST SuperBlock
      FormatVersion CDATA #REQUIRED
      LengthSize CDATA #REQUIRED
      OffsetSize CDATA #REQUIRED
>
<!--  
	The root group is the same as any other group, except
	its name is fixed.  Also, the RootGroup may not be
	a GroupPtr.
-->
<!ELEMENT RootGroup (Attribute*,Group*,Dataset*,NamedDataType*,SoftLink*)>
<!ATTLIST RootGroup
      Name CDATA #FIXED "/"
      OBJ-XID ID #REQUIRED
>
<!--  
      A Group may belong to 1 or more Groups.
      The "Parents" lists the Groups it is a member of.

      The Group should be described fully in one element.  If it appears
      in additional Groups, it should be represented as a "GroupPtr", which
      has the IDREF of the element with the full description.

      This rule is the same for Datasets and NamedDatatypes, below. 
-->
<!ELEMENT GroupPtr EMPTY>
<!ATTLIST GroupPtr
      OBJ-XID IDREF #REQUIRED
>
<!ELEMENT Group (GroupPtr|(Attribute*,Group*,Dataset*,NamedDataType*,SoftLink*))>
<!ATTLIST Group
      Name CDATA #REQUIRED
      OBJ-XID ID #REQUIRED
      Parents IDREFS #REQUIRED
>
<!ELEMENT Attribute (Dataspace,DataType,Data)>
<!ATTLIST Attribute
      Name CDATA #REQUIRED
>
<!ELEMENT SoftLink EMPTY>
<!ATTLIST SoftLink
      LinkName CDATA #REQUIRED
      Target CDATA #REQUIRED
      TargetObj IDREF #IMPLIED
      OBJ-XID ID #REQUIRED
      Source IDREF #REQUIRED
>
<!ELEMENT DatasetPtr EMPTY>
<!ATTLIST DatasetPtr
      OBJ-XID IDREF #REQUIRED
>
<!ELEMENT Dataset (DatasetPtr|(StorageLayout?,Dataspace,(DataType|NamedDataTypePtr),Attribute*,Data))>
<!ATTLIST Dataset
      Name CDATA #REQUIRED
      OBJ-XID ID #REQUIRED
      Parents IDREFS #REQUIRED
>
<!ELEMENT Dataspace (ScalarDataspace|SimpleDataspace|ComplexDataspace)>
<!ELEMENT ScalarDataspace EMPTY>
<!ELEMENT Dimension EMPTY>
<!ATTLIST Dimension
      DimSize CDATA "0"
      MaxDimSize CDATA #IMPLIED
>
<!ELEMENT SimpleDataspace (Dimension)+>
<!ATTLIST SimpleDataspace
      Ndims CDATA #REQUIRED
>
<!ELEMENT ComplexDataspace EMPTY>
<!ELEMENT NamedDataTypePtr EMPTY>
<!ATTLIST NamedDataTypePtr
      OBJ-XID IDREF #REQUIRED
>
<!ELEMENT NamedDataType (NamedDataTypePtr | (Attribute*, DataType))>
<!ATTLIST NamedDataType
      Name CDATA #REQUIRED
      OBJ-XID ID #REQUIRED
      Parents IDREFS #REQUIRED
>
<!--
     The DataType elements describe the HDF5 DataType Object, which describes
     the layout of a data element in the HDF-5 file.
-->
<!ELEMENT DataType (AtomicType|CompoundType|VLType)>
<!ELEMENT AtomicType (IntegerType|FloatType|StringType|TimeType|BitfieldType|OpaqueType|ReferenceType|EnumType)>
<!ELEMENT IntegerType EMPTY>
<!ATTLIST IntegerType
      ByteOrder (BE|LE) #REQUIRED
      Sign (true|false) #REQUIRED
      Size (1|2|4|8) #REQUIRED
>
<!ELEMENT FloatType EMPTY>
<!ATTLIST FloatType
      ByteOrder (BE|LE) #REQUIRED
      Size (4|8) #REQUIRED
      SignBitLocation CDATA #REQUIRED
      ExponentBits CDATA #REQUIRED
      ExponentLocation CDATA #REQUIRED
      MantissaBits CDATA #REQUIRED
      MantissaLocation CDATA #REQUIRED
>
<!ELEMENT TimeType EMPTY>
<!ELEMENT StringType EMPTY>
<!ATTLIST StringType
      Cset (H5T_CSET_ASCII) #REQUIRED
      StrSize CDATA #REQUIRED
      StrPad (H5T_STR_NULLTERM|H5T_STR_NULLPAD|H5T_STR_SPACEPAD) #REQUIRED
>
<!ELEMENT BitfieldType EMPTY>
<!ELEMENT OpaqueType EMPTY>
<!ELEMENT ReferenceType (ObjectReferenceType|RegionReferenceType)>
<!ELEMENT ObjectReferenceType EMPTY>
<!ELEMENT RegionReferenceType EMPTY>
<!ELEMENT EnumType (EnumElement,EnumValue)+>
<!ATTLIST EnumType
      Nelems CDATA #REQUIRED
>
<!ELEMENT EnumElement (#PCDATA)>
<!ELEMENT EnumValue (#PCDATA)>
<!ELEMENT CompoundType (Field)+>

<!ELEMENT FieldDimension EMPTY>
<!ATTLIST FieldDimension
      DimSize CDATA "0"
>

<!ELEMENT FieldDims (FieldDimension)+>
<!ATTLIST FieldDims
      Ndims CDATA #IMPLIED
>
<!ELEMENT Field (DataType,FieldDims)>
<!ATTLIST Field
      FieldName CDATA #REQUIRED
>
<!ELEMENT VLType (DataType)>
<!-- 
     The StorageLayout describes optional schemes for organizing the storage
     in the HDF-5 file.
-->
<!ELEMENT StorageLayout (ContiguousLayout|ChunkedLayout|CompactLayout|ExternalLayout)>
<!ELEMENT CompactLayout EMPTY>
<!ELEMENT ChunkedLayout (Compression,ChunkDimension+)>
<!ATTLIST ChunkedLayout
      Ndims CDATA #REQUIRED
>
<!ELEMENT ChunkDimension EMPTY>
<!ATTLIST ChunkDimension
      DimSize CDATA "0"
>
<!ELEMENT Compression EMPTY>
<!ELEMENT ContiguousLayout EMPTY>
<!ELEMENT ExternalLayout (ExternalFileInfo)+>
<!ELEMENT ExternalFileInfo EMPTY>
<!ATTLIST ExternalFileInfo
      FileName CDATA #IMPLIED
      ExternalFileOffset CDATA #IMPLIED
      ExternalFileSize CDATA #IMPLIED
>
<!--
    The Data element describes the data in the HDF-5 file (as
    opposed to the description of the data objects, above).

    This element is not specified in detail.  Future versions
    of the DTD will add more detailed mark-up for describing
    the data. 
-->

<!-- The description above of the object that contains this data -->
<!ELEMENT Data (NativeHDF5 | DataFromFile | NoData)>
<!ATTLIST Data
      HDF5OBJ IDREF #IMPLIED
>
<!--
      The NativeHDF5 element points to data in an HDF5 file.
      The XML processor must pass this information to software
      that can call the HDF5 library to access the data.

      In the future, this should use the xlink facility as
      strongly as possible.  In particular;

          a)  there should be an 'xlink:role' defined for 'data in
              an HDF-5 file'
          b)  there should be an 'xlink:title' with a standard
              string, such as "Data from HDF5 file, <file name> <path>"
              or equivalent for attributes, subsets, etc.
-->
<!ELEMENT NativeHDF5 EMPTY>
<!ATTLIST NativeHDF5
      xlink:type CDATA #FIXED "locator"
      xlink:href CDATA #REQUIRED
      H5Path CDATA #REQUIRED
      H5ObjectType (HDF5Attribute|HDF5Dataset) #REQUIRED
      OBJ-XID ID #REQUIRED
      start CDATA #IMPLIED
      nelems CDATA #REQUIRED
      stride CDATA #IMPLIED
      block CDATA #IMPLIED
>
<!--
    The DataFromFile element contains text which represents the values of
    data from the HDF5 file.

    The format and structure of this element is not fully specified 
    at this time, but a proposal for representing common types of
    data can be found at http://hdf.ncsa.uiuc.edu/HDF5/XML/.
-->
<!ELEMENT DataFromFile (#PCDATA)>
<!--
    The HDF5 object may be unitialized. If so, use this element to descripe
    the data.
-->

<!ELEMENT NoData EMPTY>
<!ATTLIST NoData
      FillValue CDATA "0"
>
